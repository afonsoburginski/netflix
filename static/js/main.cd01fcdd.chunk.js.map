{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd01fcdd.chunk.js","sourcesContent":["const API_KEY = '2f2bbfbdd5f1d85d3dce50e91b567e76';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/* \r\n- originais da netflix\r\n- recomendados (trending)\r\n- em alta (melhores votados - top rated)\r\n- acao\r\n- comedia\r\n- terror\r\n- romance\r\n- documentarios\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`);\r\n  const json = await req.json();\r\n  return json;\r\n}\r\n\r\nexport default {\r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: 'originals',\r\n        title: 'Originais do Netflix',\r\n        items : await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'trending',\r\n        title: 'Recomendados para Você',\r\n        items : await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'toprated',\r\n        title: 'Em alta',\r\n        items : await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'action',\r\n        title: 'Ação',\r\n        items : await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'comedy',\r\n        title: 'Comédia',\r\n        items : await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'horror',\r\n        title: 'Terror',\r\n        items : await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'romance',\r\n        title: 'Romance',\r\n        items : await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'documentary',\r\n        title: 'Documentários',\r\n        items : await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n    ]\r\n  },\r\n  getMovieInfo: async (movieId, type) => {\r\n    let info = {};\r\n\r\n    if (movieId) {\r\n      switch(type)\r\n      {\r\n        case 'movie':\r\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n        break;\r\n        case 'tv':\r\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n        break;\r\n        default:\r\n          info = null;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport './MovieRow.css';\r\n\r\nexport default ({title, items}) => {\r\n  const [scrollX, setScrollX] = useState(0);\r\n\r\n  const handleLeftArrow = () => {\r\n    let x = scrollX + Math.round(window.innerWidth / 2);\r\n    if(x > 0){\r\n      x = 0;\r\n    }\r\n    setScrollX(x);\r\n  };\r\n\r\n  const handleRightArrow = () => {\r\n    let x = scrollX - Math.round(window.innerWidth / 2);\r\n    let listW = items.results.length * 150;\r\n    if((window.innerWidth-listW)>x){\r\n      x = (window.innerWidth-listW) - 60;\r\n    }\r\n    setScrollX(x);\r\n  };\r\n\r\n  return (\r\n    <div className=\"movieRow\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n        <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n      </div>      \r\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\r\n        <NavigateNextIcon style={{fontSize: 50}}/>\r\n      </div>\r\n      \r\n      <div className=\"movieRow--listarea\">\r\n        <div className=\"movieRow--list\" style={{\r\n          marginLeft: scrollX,\r\n          width: items.results.length * 150\r\n        }}>\r\n          {items.results.length > 0 && items.results.map((item, key)=>(\r\n            <div key={key} className=\"movieRow--item\">\r\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}` } alt={item.original_title} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n\r\n  let firstDate = new Date(item.first_air_date);\r\n  let genres = [];\r\n  for(let i in item.genres) {\r\n    genres.push(item.genres[i].name);\r\n  } \r\n\r\n  let description = item.overview;\r\n\r\n  if (description.length > 200) {\r\n    description = description.substring(0, 200)+\"...\";\r\n  }\r\n\r\n  return (\r\n    <section className=\"featured\" style={{\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',       \r\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n    }}>\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">{item.original_name}</div>\r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n            <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>            \r\n          </div>\r\n          <div className=\"featured--description\">{description}</div>\r\n          <div className=\"featured--buttons\">\r\n            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\r\n            <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n          </div>\r\n          <div className=\"featured--genres\">\r\n            <strong>Gêneros: {genres.join(', ')}</strong>            \r\n          </div>\r\n        </div>\r\n      </div>      \r\n    </section>\r\n  );\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n  return (\r\n    <header className={black ? \"black\" : \"\"}>\r\n      <div className=\"header--logo\">                 \r\n        <a href=\"/\">\r\n          <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\" alt=\"NetFlix\" />                  \r\n        </a>\r\n      </div>   \r\n      <div className=\"header--user\">\r\n        <a href=\"/\" >\r\n          <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"usuario\"/>\r\n        </a>\r\n      </div>   \r\n    </header>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Tmdb from './Tmdb.js';\r\nimport MovieRow from './components/MovieRow';\r\nimport FeaturedMovie from './components/FeaturedMovie';\r\nimport Header from './components/Header.js';\r\n\r\nexport default () => {\r\n  \r\n  const [movieList, setMovieList] = useState([]);\r\n  const [featuredData, setFeaturedData] = useState(null);\r\n  const [blackHeader, setBlackHeader] = useState(false);\r\n  \r\n  useEffect(()=>{\r\n    const loadAll = async () => {\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      let originals = list.filter(i=>i.slug==='originals');\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n      let chosen = originals[0].items.results[randomChosen];\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\r\n\r\n      setFeaturedData(chosenInfo);\r\n    }\r\n\r\n    loadAll();\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    const scrollListener = () => {\r\n      if(window.scrollY > 10) {\r\n        setBlackHeader(true);\r\n      }else{\r\n        setBlackHeader(false);\r\n      }      \r\n    }\r\n    window.addEventListener('scroll', scrollListener);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollListener);\r\n    }\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      \r\n      <Header black={blackHeader} />\r\n\r\n      {featuredData &&\r\n        <FeaturedMovie item={featuredData}/>\r\n      } \r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key)=>(\r\n          <MovieRow key={key} title={item.title} items={item.items} />                      \r\n        ))}\r\n      </section>\r\n\r\n      <footer>\r\n\r\n        Desenvolvido por <a href=\"https://www.afonsodev.com\">Afonso.Dev</a><br/>\r\n        Professor: <a href=\"https://www.youtube.com/watch?v=tBweoUiMsDg\">Bonieky Lacerda</a><br/>\r\n        Direitos de imagem à <a href=\"https://www.netflix.com.br\">Netflix</a><br/>\r\n      </footer>\r\n\r\n      {movieList.length <= 1 &&\r\n        <div className=\"loading\">\r\n          <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\" alt=\"Carregando\"/>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}